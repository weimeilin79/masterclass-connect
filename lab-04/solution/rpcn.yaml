input:
  kafka_franz:
    seed_brokers: [ ${RP_ADDRESS} ] 
    topics: ["backend_error_geo"]
    consumer_group: "rpcn-lab4"
pipeline:
  processors:
    - group_by_value:
        value: '${! json("source_system") }'
    - mapping: |
        map aggregate {
          root.source_system = json("source_system")
          root.error_count = json("client_ip").from_all().unique().length()
          root.priority_01 = json("priority").from_all().find_all(1).length()
          root.priority_02 = json("priority").from_all().find_all(2).length()
          root.priority_03 = json("priority").from_all().find_all(3).length()
        }

        root = if batch_index() != 0 { 
          deleted()  } else {  
          root.apply("aggregate") }
output:
  stdout: {}

#output:
#  kafka_franz:
#    seed_brokers: [ ${RP_ADDRESS} ] 
#    topic: "error_summary" 

buffer:
  system_window:
    timestamp_mapping: root = now()
    size: 3s
    allowed_lateness: 500ms